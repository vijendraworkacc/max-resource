# Application port
# Specifies the port on which the Spring Boot application will run.
# In this case, the application will be accessible at http://localhost:8080.
server.port=8080

# Application name
# Sets the name of the Spring Boot application.
# The application can be identified by this name in various contexts, such as service discovery.
spring.application.name=maxresource

# Connection properties
# Configures the connection to a MySQL database.
# Specifies the JDBC driver, database URL, username, and password.
# The createDatabaseIfNotExist=true ensures that the specified database is created if it doesn't exist.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/maxresource_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root

# JPA properties
# Configures properties related to the Java Persistence API (JPA), which is used for data access in Java applications.
# show-sql: Logs SQL statements to the console.
# hibernate.ddl-auto: Specifies the schema generation strategy. 
# In this case, it's set to create, which means Hibernate will create the database schema on startup.
# database-platform: Specifies the database dialect.
# format_sql: Formats SQL statements in logs for better readability.
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.format_sql=true

# Actuator properties
# Configures Spring Boot Actuator endpoints.
# endpoints.web.exposure.include=*: Exposes all Actuator endpoints over the web.
# Actuator provides production-ready features such as health checks and monitoring.
management.endpoints.web.exposure.include=*